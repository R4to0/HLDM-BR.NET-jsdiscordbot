/**
 * Discord bot made for HLDM-BR.NET.
 * 
 * MODULENAME module
 * 
 * MIT License
 * 
 * Copyright (c) 2019 FirstName "NickName" LastName
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

"use strict";

// Static module imports
const multilang = require('multi-lang');

module.exports = class classname {
    constructor(bot) {
        this.multilang = multilang(`./app/lang/MODULENAME.json`, bot.lang, false);

        this.command = 'command'; // Main command
        this.aliases = ['alias1', 'alias2..']; // Command aliases
        this.description = this.multilang('ML_MODULENAME_DESCRIPTION'); // Brief description
        this.args = true; // Requires arguments or not
        this.guildonly = false; // Can only be used at channel or over pm too
        this.hidden = false; // [redacted]
        this.usage = this.multilang('ML_MODULENAME_USAGE'); // How to use this command
        this.owneronly = false; // Only owner can use (needs owneruid in bot.json)
        this.cooldown = 5; // Delay between usage again
        this.permissions = ['ADMINISTRATOR', 'SEND_TTS_MESSAGES']; // Users with such permissions will be allowed to use (1st check)
        this.allowedroles = ['role1', 'role2..']; // Users with such roles will be allowed to use (2nd check)
        this.denyroles = ['wanker', 'punished']; // Users with such roles will be DENIED to use (3rd check)
    }
    Init() {
        // Do something when loading module
    }
    Unload() {
        // Do something when unloading/reloading module
    }

    async execute(msg, args) {
        // Do something after command match
    }
}
